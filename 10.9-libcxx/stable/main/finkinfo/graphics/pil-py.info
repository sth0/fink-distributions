# -*- coding: ascii; tab-width: 4 -*-
Info2: <<

Package: pil-py%type_pkg[python]
Type: python (2.7 3.5 3.6 3.7)

Version: 6.1.0
Revision: 1
Description: Python Imaging Library
DescDetail: <<
The Python Imaging Library (PIL) adds image processing capabilities to
your Python interpreter. This library supports many file formats, and
provides powerful image processing and graphics capabilities.
<<
#Source: https://codeload.github.com/python-imaging/Pillow/tar.gz/%v
#SourceRename: Pillow-%v.tar.gz
Source: https://files.pythonhosted.org/packages/source/P/Pillow/Pillow-%v.tar.gz
Source-Checksum: SHA256(0804f77cb1e9b6dbd37601cee11283bba39a8d44b9ddb053400c58e0c0d7d9de)

BuildDepends: <<
	setuptools-tng-py%type_pkg[python],
	fink (>= 0.24.12-1),
	freetype219 (>= 2.3.7-7),
	lcms2,
	libimagequant0 (>= 2.12.0-1),
	libjpeg9,
	libopenjp2.7,
	libtiff5,
	libwebp7,
	tcltk-dev (>= 8.4.1-1)
<<
Depends: <<
	cffi-py%type_pkg[python],
	freetype219-shlibs (>= 2.3.7-7),
	ghostscript | ghostscript-nox,
	lcms2-shlibs,
	libimagequant0-shlibs (>= 2.12.0-1),
	libjpeg9-shlibs,
	libopenjp2.7-shlibs,
	libtiff5-shlibs,
	libwebp7-shlibs,
	olefile-py%type_pkg[python],
	python%type_pkg[python],
	tcltk (>= 8.4.1-1)
<<
Replaces: pil
Provides: pil
NoSetCPPFLAGS: true
NoSetLDFLAGS: true
PatchScript: <<
	#!/bin/sh -ev
	# Some unicode tests fail on py27.
	if [ %type_pkg[python] == 27 ]; then
		perl -pi -e 's/ UnicodeEncodeError//; s/win32/darwin/' Tests/test_imagefont.py
	fi
<<
CompileScript: <<
	#!/bin/sh -ev
	dpg='--disable-platform-guessing'
	if [ "$(uname -r | cut -d. -f1)" -ge 17 ]; then
		SDK_PATH="$(xcrun --sdk macosx --show-sdk-path)"
		ZLIB_ROOT="$SDK_PATH/usr" CFLAGS="-Wno-nullability-completeness -Wno-expansion-to-defined" %p/bin/python%type_raw[python] setup.py build_ext $dpg
		ZLIB_ROOT="$SDK_PATH/usr" CFLAGS="-Wno-nullability-completeness -Wno-expansion-to-defined" %p/bin/python%type_raw[python] setup.py build
	else
		ZLIB_ROOT="/usr" %p/bin/python%type_raw[python] setup.py build_ext $dpg
		ZLIB_ROOT="/usr" %p/bin/python%type_raw[python] setup.py build
	fi
<<
InfoTest: <<
	TestDepends: pytest-py%type_pkg[python], numpy-py%type_pkg[python]
	TestScript: <<
		#!/bin/bash -ev
		dpg='--disable-platform-guessing'
		if [ "$(uname -r | cut -d. -f1)" -ge 17 ]; then
			SDK_PATH="$(xcrun --sdk macosx --show-sdk-path)"
			ZLIB_ROOT="$SDK_PATH/usr" CFLAGS="-Wno-nullability-completeness -Wno-expansion-to-defined"  %p/bin/python%type_raw[python] setup.py build_ext --inplace $dpg
		else
		ZLIB_ROOT="/usr" %p/bin/python%type_raw[python] setup.py build_ext --inplace $dpg
		fi
		export PYTHONPATH=`ls -d %b/build/lib*`
		%p/bin/python%type_raw[python] selftest.py || exit 2
		%p/bin/pytest-%type_raw[python] -vx Tests || exit 2
		find ./build -name "*.pyc" -delete
	<<
<<
InstallScript: <<
	#!/bin/sh -ev
	dpg='--disable-platform-guessing'
	if [ "$(uname -r | cut -d. -f1)" -ge 17 ]; then
		SDK_PATH="$(xcrun --sdk macosx --show-sdk-path)"
		ZLIB_ROOT="$SDK_PATH/usr" CFLAGS="-Wno-nullability-completeness -Wno-expansion-to-defined" %p/bin/python%type_raw[python] setup.py build_ext $dpg
		ZLIB_ROOT="$SDK_PATH/usr" CFLAGS="-Wno-nullability-completeness -Wno-expansion-to-defined" %p/bin/python%type_raw[python] setup.py install --root=%d
	else
		ZLIB_ROOT="/usr" %p/bin/python%type_raw[python] setup.py build_ext $dpg
		ZLIB_ROOT="/usr" %p/bin/python%type_raw[python] setup.py install --root=%d
	fi
	
	mkdir -p %i/share/doc/%n
	cp -R docs/ %i/share/doc/%n/html
	mkdir -p %i/include/python%type_raw[python]/PIL
	cp -f src/libImaging/{Imaging.h,ImPlatform.h,ImagingUtils.h,ImDib.h} %i/include/python%type_raw[python]/PIL
<<
DocFiles: LICENSE PKG-INFO README.rst
License: OSI-Approved
Homepage: https://github.com/python-imaging/Pillow
Maintainer: Daniel Johnson <daniel@daniel-johnson.org>
DescPackaging: <<
	Uses the tcl that matches python's tkinter

	Avoid un-needed -I and -L paths

	python build system seems to put CPPFLAGS before custom
	include_dirs (python bug?): NoSetCPPFLAGS so that local -I
	takes precedence. Especially need to find libImaging/Zip.h
	rather than libzip1's zip.h on case-insensitive FS.
	
	This is the Pillow fork of PIL maintained by the plone community.
	Unlike PIL, it is under active development but is a otherwise a
	drop-in replacement.
	
	I've had reports of segfaults when pil is built with libjpeg9 and
	then used with pyqt4 (which through qt4 uses libjpeg8). Switching
	back to libjpeg8 seems to solve the problem.
<<

# Info2
<<
