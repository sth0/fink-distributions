# -*- coding: ascii; tab-width: 4 -*-
Info2: <<

Package: wcwidth-py%type_pkg[python]
Version: 0.1.7
Revision: 1
Maintainer: Derek Homeier <dhomeie@gwdg.de>
License: BSD
Type: python (2.7 3.4 3.5 3.6 3.7 3.8)
Homepage: https://github.com/jquast/wcwidth
Source: https://files.pythonhosted.org/packages/source/w/wcwidth/wcwidth-%v.tar.gz
Source-MD5: b3b6a0a08f0c8a34d1de8cf44150a4ad

Depends: python%type_pkg[python]-shlibs
BuildDepends: python%type_pkg[python], setuptools-tng-py%type_pkg[python]

CompileScript: python%type_raw[python] setup.py build
InstallScript: python%type_raw[python] setup.py install --root=%d

InfoTest: <<
  TestDepends: pytest-py%type_pkg[python]
  TestScript: PYTHONPATH=build/lib %p/bin/py.test-%type_raw[python] wcwidth || exit 2
  TestSuiteSize: small
<<

Description: Measure number of Terminal column cells

DescDetail: <<
This library measures the number of Terminal column cells of wide-character
codes. It is mainly intended for those implementing a Terminal Emulator,
or programs that carefully produce output to be interpreted by one.

Problem Statement: When printed to the screen, the length of the string is
usually equal to the number of cells it occupies. However, there are categories
of characters that occupy 2 cells (full-wide), and others that occupy 0.

Solution: POSIX.1-2001 and POSIX.1-2008 conforming systems provide wcwidth(3)
and wcswidth(3) C functions of which this python module's functions precisely
copy. These functions return the number of cells a unicode string is expected
to occupy.

This library aims to be forward-looking, portable, and most correct. The most
current release of this API is based on the Unicode Standard release files.
<<

DocFiles: README.rst

# Info2
<<
